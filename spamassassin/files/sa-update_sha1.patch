Reintroduce SHA-1 support for sa-update.

--- /usr/bin/sa-update.orig	2018-10-16 00:42:46.609946456 +0200
+++ /usr/bin/sa-update	2018-10-02 16:22:34.737431661 +0200
@@ -98,7 +98,7 @@
 BEGIN {
   # Deal with optional modules
 
-  eval { require Digest::SHA; import Digest::SHA qw(sha256_hex sha512_hex); 1 } and do { $have_sha256=1; $have_sha512=1 }
+  eval { require Digest::SHA; import Digest::SHA qw(sha1_hex sha256_hex sha512_hex); 1 } and do { $have_sha256=1; $have_sha512=1 }
   or die "Unable to verify file hashes! You must install a modern version of Digest::SHA.";
   
     $have_lwp = eval {
@@ -600,13 +600,15 @@
   my $content;
   my $SHA512;
   my $SHA256;
+  my $SHA1;
   my $GPG;
 
   if ($instfile) {
-    dbg("channel: using --install files $instfile\{,.sha256,.sha512,.asc\}");
+    dbg("channel: using --install files $instfile\{,.sha256,.sha512,.asc,.sha1\}");
     $content = read_install_file($instfile);
     if ( -s "$instfile.sha512" ) { $SHA512 = read_install_file($instfile.".sha512"); }
     if ( -s "$instfile.sha256" ) { $SHA256 = read_install_file($instfile.".sha256"); }
+    if ( -s "$instfile.sha1" ) { $SHA1 = read_install_file($instfile.".sha1"); }
     $GPG = read_install_file($instfile.".asc") if $GPG_ENABLED;
 
   } else {  # not an install file, obtain fresh rules from network
@@ -787,6 +789,17 @@
         dbg("channel: No sha256 file available from $mirror");
       }
 
+      # SHA1 of the archive file
+      $result_fname = http_get("$mirror/$newV.tar.gz.sha1", $UPDDir);
+      if ( -s $result_fname) {
+        $SHA1 = read_content($result_fname, 0);
+        last unless $SHA1;
+        $preserve_files{$result_fname} = 1;
+      } else {
+        undef $SHA1;
+        dbg("channel: No sha1 file available from $mirror");
+      }
+
       # if GPG is enabled, the GPG detached signature of the archive file
       if ($GPG_ENABLED) {
         $result_fname = http_get("$mirror/$newV.tar.gz.asc", $UPDDir);
@@ -799,7 +812,7 @@
 
   }
 
-  unless ($content && ( $SHA512 || $SHA256 ) && (!$GPG_ENABLED || $GPG)) {
+  unless ($content && ( $SHA512 || $SHA256 || $SHA1) && (!$GPG_ENABLED || $GPG)) {
     channel_failed("channel: could not find working mirror");
     next;
   }
@@ -833,6 +846,22 @@
       next;
     }
   }
+
+ if ( $SHA1 ) {
+    # Validate the SHA1 signature as a fallback.
+    # The SHA1 file may be "signature filename" ala sha1sum, just use the signature
+    { local($1);
+      $SHA1 =~ /^([a-fA-F0-9]{40})/;
+      $SHA1 = $1 || 'INVALID';
+    }
+    my $digest = sha1_hex($content);
+    dbg("sha1: verification wanted: $SHA1");
+    dbg("sha1: verification result: $digest");
+    unless ($digest eq $SHA1) {
+      channel_failed("channel: SHA1 verification failed");
+      next;
+    }
+  }
 
   # Write the content out to a temp file for GPG/Archive::Tar interaction
   dbg("channel: populating temp content file %s", $content_file);
